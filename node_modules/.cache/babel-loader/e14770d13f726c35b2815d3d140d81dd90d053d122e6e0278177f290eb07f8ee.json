{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\fitness\\\\fitnesss\\\\fitt\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Container, Typography, TextField, Button, FormControl, InputLabel, Select, MenuItem, Box } from '@mui/material';\n// import GooglePayButton from '@google-pay/button-react';\n\n// const PaymentPage = () => {\n//   const [paymentMethod, setPaymentMethod] = useState('card');\n//   const [cardDetails, setCardDetails] = useState({\n//     cardNumber: '',\n//     expiryDate: '',\n//     cvv: '',\n//     cardHolder: ''\n//   });\n\n//   const handlePaymentMethodChange = (event) => {\n//     setPaymentMethod(event.target.value);\n//   };\n\n//   const handleInputChange = (event) => {\n//     const { name, value } = event.target;\n//     setCardDetails((prevDetails) => ({\n//       ...prevDetails,\n//       [name]: value\n//     }));\n//   };\n\n//   const handlePayment = () => {\n//     console.log('Processing payment with details:', cardDetails);\n//   };\n\n//   return (\n//     <Container style={{ marginTop: '4rem' }}>\n//       <Typography variant=\"h4\" gutterBottom>\n//         Payment Page\n//       </Typography>\n\n//       <FormControl fullWidth style={{ marginTop: '20px', marginBottom: '20px' }}>\n//         <InputLabel id=\"payment-method-label\">Select Payment Method</InputLabel>\n//         <Select\n//           labelId=\"payment-method-label\"\n//           id=\"payment-method\"\n//           value={paymentMethod}\n//           label=\"Select Payment Method\"\n//           onChange={handlePaymentMethodChange}\n//         >\n//           <MenuItem value=\"card\">Credit/Debit Card</MenuItem>\n//           <MenuItem value=\"gpay\">Google Pay</MenuItem>\n//           <MenuItem value=\"phonepe\">PhonePe</MenuItem>\n//         </Select>\n//       </FormControl>\n\n//       {paymentMethod === 'card' && (\n//         <Box>\n//           <TextField\n//             label=\"Card Number\"\n//             variant=\"outlined\"\n//             name=\"cardNumber\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={cardDetails.cardNumber}\n//             onChange={handleInputChange}\n//           />\n//           <TextField\n//             label=\"Card Holder Name\"\n//             variant=\"outlined\"\n//             name=\"cardHolder\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={cardDetails.cardHolder}\n//             onChange={handleInputChange}\n//           />\n//           <TextField\n//             label=\"Expiry Date (MM/YY)\"\n//             variant=\"outlined\"\n//             name=\"expiryDate\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={cardDetails.expiryDate}\n//             onChange={handleInputChange}\n//           />\n//           <TextField\n//             label=\"CVV\"\n//             variant=\"outlined\"\n//             name=\"cvv\"\n//             fullWidth\n//             margin=\"normal\"\n//             value={cardDetails.cvv}\n//             onChange={handleInputChange}\n//           />\n//         </Box>\n//       )}\n\n//       {paymentMethod === 'gpay' && (\n//         <Box style={{ marginTop: '20px' }}>\n//           <GooglePayButton\n//             environment=\"TEST\"\n//             paymentRequest={{\n//               apiVersion: 2,\n//               apiVersionMinor: 0,\n//               allowedPaymentMethods: [\n//                 {\n//                   type: 'CARD',\n//                   parameters: {\n//                     allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n//                     allowedCardNetworks: ['MASTERCARD', 'VISA'],\n//                   },\n//                   tokenizationSpecification: {\n//                     type: 'PAYMENT_GATEWAY',\n//                     parameters: {\n//                       gateway: 'example',\n//                       gatewayMerchantId: 'exampleGatewayMerchantId',\n//                     },\n//                   },\n//                 },\n//               ],\n//               merchantInfo: {\n//                 merchantId: '12345678901234567890',\n//                 merchantName: 'Demo Merchant',\n//               },\n//               transactionInfo: {\n//                 totalPriceStatus: 'FINAL',\n//                 totalPriceLabel: 'Total',\n//                 totalPrice: '$100',\n//                 currencyCode: 'USD',\n//                 countryCode: 'US',\n//               },\n//             }}\n//             onLoadPaymentData={(paymentRequest) => {\n//               console.log('Success', paymentRequest);\n//             }}\n//             existingPaymentMethodRequired='false'\n//             buttonColor='black'\n//             buttonType='pay'\n//           />\n//         </Box>\n//       )}\n\n//       {paymentMethod === 'phonepe' && (\n//         <Box style={{ marginTop: '20px' }}>\n//           <Typography variant=\"h6\">\n//             Use your PhonePe app to complete the payment.\n//           </Typography>\n//         </Box>\n//       )}\n\n//       <Button\n//         variant=\"contained\"\n//         color=\"primary\"\n//         style={{ marginTop: '20px' }}\n//         onClick={handlePayment}\n//       >\n//         Pay Now\n//       </Button>\n//     </Container>\n//   );\n// };\n\n// export default PaymentPage;\n// import React, { useState } from 'react';\n// import { TextField, Button, Typography, Container, Grid, Paper } from '@mui/material';\nimport GPayIcon from '../assets/images/google-pay.png';\nimport PhonePeIcon from '../assets/images/phonepe.png';\nimport CreditCardIcon from '../assets/images/payment.png';\n// import './Payment.css';\n\n// const Payment = () => {\n//   const [selectedPaymentMethod, setSelectedPaymentMethod] = useState('');\n\n//   const handlePaymentMethodChange = (method) => {\n//     setSelectedPaymentMethod(method);\n//   };\n\n//   const handlePayment = () => {\n//     // Add your payment processing logic here\n//     alert(`Processing payment with ${selectedPaymentMethod}`);\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\" className=\"payment-container\">\n//       <Typography variant=\"h4\" gutterBottom>\n//         Payment Page\n//       </Typography>\n//       <Grid container spacing={3}>\n//         <Grid item xs={12}>\n//           <Paper className={`payment-method ${selectedPaymentMethod === 'gpay' && 'selected'}`} onClick={() => handlePaymentMethodChange('gpay')}>\n//             <img src={GPayIcon} alt=\"GPay\" className=\"payment-icon\" />\n//             <Typography>Google Pay</Typography>\n//           </Paper>\n//         </Grid>\n//         <Grid item xs={12}>\n//           <Paper className={`payment-method ${selectedPaymentMethod === 'phonepe' && 'selected'}`} onClick={() => handlePaymentMethodChange('phonepe')}>\n//             <img src={PhonePeIcon} alt=\"PhonePe\" className=\"payment-icon\" />\n//             <Typography>PhonePe</Typography>\n//           </Paper>\n//         </Grid>\n//         <Grid item xs={12}>\n//           <Paper className={`payment-method ${selectedPaymentMethod === 'creditcard' && 'selected'}`} onClick={() => handlePaymentMethodChange('creditcard')}>\n//             <img src={CreditCardIcon} alt=\"Credit Card\" className=\"payment-icon\" />\n//             <Typography>Credit Card</Typography>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//       {selectedPaymentMethod === 'creditcard' && (\n//         <div className=\"credit-card-form\">\n//           <TextField label=\"Card Number\" variant=\"outlined\" fullWidth margin=\"normal\" />\n//           <TextField label=\"Expiry Date\" variant=\"outlined\" fullWidth margin=\"normal\" />\n//           <TextField label=\"CVV\" variant=\"outlined\" fullWidth margin=\"normal\" />\n//         </div>\n//       )}\n//       <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handlePayment} disabled={!selectedPaymentMethod}>\n//         Pay with {selectedPaymentMethod ? selectedPaymentMethod.toUpperCase() : '...'}\n//       </Button>\n//     </Container>\n//   );\n// };\n\n// export default Payment;\n// import React, { useState } from 'react';\n// import { TextField, Button, Typography, Container, Grid, Paper, Box } from '@mui/material';\n\n// const Payment = () => {\n//   const [selectedPaymentMethod, setSelectedPaymentMethod] = useState('');\n\n//   const handlePaymentMethodChange = (method) => {\n//     setSelectedPaymentMethod(method);\n//   };\n\n//   const handlePayment = () => {\n//     // Add your payment processing logic here\n//     alert(`Processing payment with ${selectedPaymentMethod}`);\n//   };\n\n//   return (\n//     <Container maxWidth=\"md\" className=\"payment-container\">\n//       <Typography variant=\"h4\" gutterBottom>\n//         Payment Page\n//       </Typography>\n//       <Grid container spacing={3}>\n//         <Grid item xs={12} sm={4}>\n//           <Paper\n//             className={`payment-method ${selectedPaymentMethod === 'gpay' && 'selected'}`}\n//             onClick={() => handlePaymentMethodChange('gpay')}\n//           >\n//             <img src={GPayIcon} alt=\"GPay\" className=\"payment-icon\" />\n//             <Typography>Google Pay</Typography>\n//           </Paper>\n//         </Grid>\n//         <Grid item xs={12} sm={4}>\n//           <Paper\n//             className={`payment-method ${selectedPaymentMethod === 'phonepe' && 'selected'}`}\n//             onClick={() => handlePaymentMethodChange('phonepe')}\n//           >\n//             <img src={PhonePeIcon} alt=\"PhonePe\" className=\"payment-icon\" />\n//             <Typography>PhonePe</Typography>\n//           </Paper>\n//         </Grid>\n//         <Grid item xs={12} sm={4}>\n//           <Paper\n//             className={`payment-method ${selectedPaymentMethod === 'creditcard' && 'selected'}`}\n//             onClick={() => handlePaymentMethodChange('creditcard')}\n//           >\n//             <img src={CreditCardIcon} alt=\"Credit Card\" className=\"payment-icon\" />\n//             <Typography>Credit Card</Typography>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//       {selectedPaymentMethod === 'creditcard' && (\n//         <Box className=\"credit-card-form\">\n//           <TextField label=\"Card Number\" variant=\"outlined\" fullWidth margin=\"normal\" />\n//           <TextField label=\"Expiry Date\" variant=\"outlined\" fullWidth margin=\"normal\" />\n//           <TextField label=\"CVV\" variant=\"outlined\" fullWidth margin=\"normal\" />\n//         </Box>\n//       )}\n//       <Button\n//         variant=\"contained\"\n//         color=\"primary\"\n//         fullWidth\n//         onClick={handlePayment}\n//         disabled={!selectedPaymentMethod}\n//         className=\"pay-button\"\n//       >\n//         Pay with {selectedPaymentMethod ? selectedPaymentMethod.toUpperCase() : '...'}\n//       </Button>\n//     </Container>\n//   );\n// };\n\n// export default Payment;\n// import React, { useState } from 'react';\n// import { TextField, Button, Typography, Container, Tabs, Tab, Box } from '@mui/material';\n\n// const Payment = () => {\n//   const [selectedTab, setSelectedTab] = useState(0);\n\n//   const handleTabChange = (event, newValue) => {\n//     setSelectedTab(newValue);\n//   };\n\n//   const handlePayment = () => {\n//     const paymentMethods = ['GPay', 'PhonePe', 'Credit Card'];\n//     alert(`Processing payment with ${paymentMethods[selectedTab]}`);\n//   };\n\n//   return (\n//     <Container maxWidth=\"md\" className=\"payment-container\">\n//       <Typography variant=\"h4\" gutterBottom>\n//         Payment Page\n//       </Typography>\n//       <Tabs value={selectedTab} onChange={handleTabChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\n//         <Tab label=\"Google Pay\" icon={<img src={GPayIcon} alt=\"GPay\" className=\"tab-icon\" />} />\n//         <Tab label=\"PhonePe\" icon={<img src={PhonePeIcon} alt=\"PhonePe\" className=\"tab-icon\" />} />\n//         <Tab label=\"Credit Card\" icon={<img src={CreditCardIcon} alt=\"Credit Card\" className=\"tab-icon\" />} />\n//       </Tabs>\n//       <Box className=\"payment-content\">\n//         {selectedTab === 0 && (\n//           <Typography variant=\"h6\">\n//             Pay with Google Pay\n//           </Typography>\n//         )}\n//         {selectedTab === 1 && (\n//           <Typography variant=\"h6\">\n//             Pay with PhonePe\n//           </Typography>\n//         )}\n//         {selectedTab === 2 && (\n//           <Box className=\"credit-card-form\">\n//             <TextField label=\"Card Number\" variant=\"outlined\" fullWidth margin=\"normal\" />\n//             <TextField label=\"Expiry Date\" variant=\"outlined\" fullWidth margin=\"normal\" />\n//             <TextField label=\"CVV\" variant=\"outlined\" fullWidth margin=\"normal\" />\n//           </Box>\n//         )}\n//       </Box>\n//       <Button\n//         variant=\"contained\"\n//         color=\"primary\"\n//         fullWidth\n//         onClick={handlePayment}\n//         className=\"pay-button\"\n//       >\n//         Pay with {selectedTab === 0 ? 'Google Pay' : selectedTab === 1 ? 'PhonePe' : 'Credit Card'}\n//       </Button>\n//     </Container>\n//   );\n// };\n\n// export default Payment;\n\n// import React from 'react';\n// import { Box, Button, Radio, FormControlLabel, RadioGroup, TextField, MenuItem, Typography } from '@mui/material';\n\n// const Payment = () => {\n//   return (\n//     <Box className=\"checkout-container\">\n//       <Box className=\"address-section\">\n//         <Typography variant=\"h6\">Delivery address</Typography>\n//         <Typography>Lalitha</Typography>\n//         <Typography>Room No: 217, Vlb Trust Office, Girls Hostel, Kovaipudur</Typography>\n//         <Typography>COIMBATORE, TAMIL NADU 641042</Typography>\n//         <Button variant=\"text\">Change</Button>\n//       </Box>\n\n//       <Box className=\"payment-section\">\n//         <Typography variant=\"h6\">Select a payment method</Typography>\n\n//         <Box className=\"balance-section\">\n//           <TextField label=\"Enter Code\" variant=\"outlined\" size=\"small\" />\n//           <Button variant=\"contained\">Apply</Button>\n//         </Box>\n\n//         <Box className=\"other-methods-section\">\n//           <Typography>Another payment method</Typography>\n//           <RadioGroup name=\"payment-method\" defaultValue=\"cod\">\n//             <FormControlLabel value=\"card\" control={<Radio />} label=\"Credit or debit card\" />\n//             <Box className=\"cards\">\n//               <img src=\"visa.png\" alt=\"Visa\" />\n//               <img src=\"mastercard.png\" alt=\"MasterCard\" />\n//               <img src=\"amex.png\" alt=\"American Express\" />\n//               <img src=\"rupay.png\" alt=\"RuPay\" />\n//             </Box>\n//             <FormControlLabel value=\"netbanking\" control={<Radio />} label=\"Net Banking\" />\n//             <TextField select label=\"Choose an Option\" variant=\"outlined\" size=\"small\">\n//               <MenuItem value=\"bank1\">Bank 1</MenuItem>\n//               <MenuItem value=\"bank2\">Bank 2</MenuItem>\n//             </TextField>\n//             <FormControlLabel value=\"upi\" control={<Radio />} label=\"Other UPI Apps\" />\n//             <FormControlLabel value=\"cod\" control={<Radio />} label=\"Cash on Delivery/Pay on Delivery\" />\n//           </RadioGroup>\n//         </Box>\n\n//         <Button variant=\"contained\" className=\"payment-button\">Use this payment method</Button>\n//       </Box>\n\n//       <Box className=\"summary-section\">\n//         <Typography variant=\"h6\">Order Summary</Typography>\n//         <Typography>Items: ₹299.00</Typography>\n//         <Typography>Delivery: ₹40.00</Typography>\n//         <Typography>Total: ₹339.00</Typography>\n//         <Typography>Promotion Applied: -₹40.00</Typography>\n//         <Typography variant=\"h5\">Order Total: ₹299.00</Typography>\n//         <Button variant=\"text\">How are delivery costs calculated?</Button>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default Payment;\n\nimport React, { useContext, useState } from 'react';\nimport { Container, Typography, Button, Box, Grid, FormControl, InputLabel, Select, MenuItem, TextField, Paper } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useCart } from './CartContext';\nimport Layout from './Layout';\nimport './Payment.css'; // Add necessary CSS styles\n// import { makeStyles } from '@mui/styles';\nimport PayPalPayment from './PayPalPayment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const {\n    cart,\n    totalPrice\n  } = useCart();\n  // const classes = useStyles();\n  const [paymentMethod, setPaymentMethod] = React.useState('creditCard');\n  const [discountCode, setDiscountCode] = useState('');\n  const [discountedPrice, setDiscountedPrice] = useState(totalPrice);\n\n  // Example discount logic (you can replace this with your own)\n  const applyDiscount = () => {\n    const discount = discountCode === 'SAVE10' ? 0.1 : 0; // 10% discount\n    const newPrice = totalPrice * (1 - discount);\n    setDiscountedPrice(newPrice);\n  };\n  const [cardDetails, setCardDetails] = React.useState({\n    cardNumber: '',\n    expiryDate: '',\n    cvv: ''\n  });\n  const handlePaymentMethodChange = event => {\n    setPaymentMethod(event.target.value);\n  };\n  const handleError = error => {\n    console.error('PayPal Payment Error: ', error);\n  };\n  const handleCancel = () => {\n    console.log('Transaction cancelled');\n  };\n  const handleCardDetailsChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCardDetails({\n      ...cardDetails,\n      [name]: value\n    });\n  };\n  const handlePlaceOrder = () => {\n    // Implement order placing logic\n    console.log('Order placed with details:', {\n      paymentMethod,\n      cardDetails,\n      cart\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: '4rem'\n      },\n      className: \"payment-page\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        className: \"payment-header\",\n        children: \"Payment Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Order Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Cart Items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 19\n          }, this), cart.map(item => /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              marginBottom: '0.5rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [item.name, \" - \\u20B9\", item.price, \" x \", item.count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Total Price: \\u20B9\", totalPrice.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Discounted Price: \\u20B9\", discountedPrice.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Apply Discount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Discount Code\",\n          variant: \"outlined\",\n          value: discountCode,\n          onChange: e => setDiscountCode(e.target.value)\n          // className={classes.discountInput}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: applyDiscount\n          // className={classes.applyButton}\n          ,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: \"payment-header\",\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            style: {\n              marginTop: '20px',\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"payment-method-label\",\n              children: \"Select Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"payment-method-label\",\n              id: \"payment-method\",\n              value: paymentMethod,\n              label: \"Select Payment Method\",\n              onChange: handlePaymentMethodChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"creditCard\",\n                children: \"Credit Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"debitCard\",\n                children: \"Debit Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"paypal\",\n                children: \"PayPal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), paymentMethod === 'creditCard' && /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Card Number\",\n              name: \"cardNumber\",\n              value: cardDetails.cardNumber,\n              onChange: handleCardDetailsChange,\n              style: {\n                marginBottom: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginBottom: 2,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Expiry Date\",\n                name: \"expiryDate\",\n                value: cardDetails.expiryDate,\n                onChange: handleCardDetailsChange,\n                style: {\n                  marginRight: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"CVV\",\n                name: \"cvv\",\n                value: cardDetails.cvv,\n                onChange: handleCardDetailsChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), paymentMethod === 'paypal' && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(PayPalPayment, {\n              totalPrice: totalPrice,\n              onError: handleError,\n              onCancel: handleCancel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this)\n          // <p>Paypal</p>\n          , /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handlePlaceOrder,\n            style: {\n              marginTop: '20px',\n              backgroundColor: 'purple',\n              width: '100%'\n            },\n            children: \"Place Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 464,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"JYgerG7hJx71PeJt5z6elEraxTc=\", false, function () {\n  return [useCart];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["GPayIcon","PhonePeIcon","CreditCardIcon","React","useContext","useState","Container","Typography","Button","Box","Grid","FormControl","InputLabel","Select","MenuItem","TextField","Paper","Link","useCart","Layout","PayPalPayment","jsxDEV","_jsxDEV","Payment","_s","cart","totalPrice","paymentMethod","setPaymentMethod","discountCode","setDiscountCode","discountedPrice","setDiscountedPrice","applyDiscount","discount","newPrice","cardDetails","setCardDetails","cardNumber","expiryDate","cvv","handlePaymentMethodChange","event","target","value","handleError","error","console","handleCancel","log","handleCardDetailsChange","name","handlePlaceOrder","children","style","marginTop","className","variant","sx","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","elevation","map","item","marginBottom","price","count","id","toFixed","label","onChange","e","color","onClick","xs","md","fullWidth","labelId","display","justifyContent","marginRight","onError","onCancel","backgroundColor","width","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/fitness/fitnesss/fitt/src/components/Payment.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Container, Typography, TextField, Button, FormControl, InputLabel, Select, MenuItem, Box } from '@mui/material';\r\n// import GooglePayButton from '@google-pay/button-react';\r\n\r\n// const PaymentPage = () => {\r\n//   const [paymentMethod, setPaymentMethod] = useState('card');\r\n//   const [cardDetails, setCardDetails] = useState({\r\n//     cardNumber: '',\r\n//     expiryDate: '',\r\n//     cvv: '',\r\n//     cardHolder: ''\r\n//   });\r\n\r\n//   const handlePaymentMethodChange = (event) => {\r\n//     setPaymentMethod(event.target.value);\r\n//   };\r\n\r\n//   const handleInputChange = (event) => {\r\n//     const { name, value } = event.target;\r\n//     setCardDetails((prevDetails) => ({\r\n//       ...prevDetails,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n\r\n//   const handlePayment = () => {\r\n//     console.log('Processing payment with details:', cardDetails);\r\n//   };\r\n\r\n//   return (\r\n//     <Container style={{ marginTop: '4rem' }}>\r\n//       <Typography variant=\"h4\" gutterBottom>\r\n//         Payment Page\r\n//       </Typography>\r\n\r\n//       <FormControl fullWidth style={{ marginTop: '20px', marginBottom: '20px' }}>\r\n//         <InputLabel id=\"payment-method-label\">Select Payment Method</InputLabel>\r\n//         <Select\r\n//           labelId=\"payment-method-label\"\r\n//           id=\"payment-method\"\r\n//           value={paymentMethod}\r\n//           label=\"Select Payment Method\"\r\n//           onChange={handlePaymentMethodChange}\r\n//         >\r\n//           <MenuItem value=\"card\">Credit/Debit Card</MenuItem>\r\n//           <MenuItem value=\"gpay\">Google Pay</MenuItem>\r\n//           <MenuItem value=\"phonepe\">PhonePe</MenuItem>\r\n//         </Select>\r\n//       </FormControl>\r\n\r\n//       {paymentMethod === 'card' && (\r\n//         <Box>\r\n//           <TextField\r\n//             label=\"Card Number\"\r\n//             variant=\"outlined\"\r\n//             name=\"cardNumber\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             value={cardDetails.cardNumber}\r\n//             onChange={handleInputChange}\r\n//           />\r\n//           <TextField\r\n//             label=\"Card Holder Name\"\r\n//             variant=\"outlined\"\r\n//             name=\"cardHolder\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             value={cardDetails.cardHolder}\r\n//             onChange={handleInputChange}\r\n//           />\r\n//           <TextField\r\n//             label=\"Expiry Date (MM/YY)\"\r\n//             variant=\"outlined\"\r\n//             name=\"expiryDate\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             value={cardDetails.expiryDate}\r\n//             onChange={handleInputChange}\r\n//           />\r\n//           <TextField\r\n//             label=\"CVV\"\r\n//             variant=\"outlined\"\r\n//             name=\"cvv\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             value={cardDetails.cvv}\r\n//             onChange={handleInputChange}\r\n//           />\r\n//         </Box>\r\n//       )}\r\n\r\n//       {paymentMethod === 'gpay' && (\r\n//         <Box style={{ marginTop: '20px' }}>\r\n//           <GooglePayButton\r\n//             environment=\"TEST\"\r\n//             paymentRequest={{\r\n//               apiVersion: 2,\r\n//               apiVersionMinor: 0,\r\n//               allowedPaymentMethods: [\r\n//                 {\r\n//                   type: 'CARD',\r\n//                   parameters: {\r\n//                     allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n//                     allowedCardNetworks: ['MASTERCARD', 'VISA'],\r\n//                   },\r\n//                   tokenizationSpecification: {\r\n//                     type: 'PAYMENT_GATEWAY',\r\n//                     parameters: {\r\n//                       gateway: 'example',\r\n//                       gatewayMerchantId: 'exampleGatewayMerchantId',\r\n//                     },\r\n//                   },\r\n//                 },\r\n//               ],\r\n//               merchantInfo: {\r\n//                 merchantId: '12345678901234567890',\r\n//                 merchantName: 'Demo Merchant',\r\n//               },\r\n//               transactionInfo: {\r\n//                 totalPriceStatus: 'FINAL',\r\n//                 totalPriceLabel: 'Total',\r\n//                 totalPrice: '$100',\r\n//                 currencyCode: 'USD',\r\n//                 countryCode: 'US',\r\n//               },\r\n//             }}\r\n//             onLoadPaymentData={(paymentRequest) => {\r\n//               console.log('Success', paymentRequest);\r\n//             }}\r\n//             existingPaymentMethodRequired='false'\r\n//             buttonColor='black'\r\n//             buttonType='pay'\r\n//           />\r\n//         </Box>\r\n//       )}\r\n\r\n//       {paymentMethod === 'phonepe' && (\r\n//         <Box style={{ marginTop: '20px' }}>\r\n//           <Typography variant=\"h6\">\r\n//             Use your PhonePe app to complete the payment.\r\n//           </Typography>\r\n//         </Box>\r\n//       )}\r\n\r\n//       <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         style={{ marginTop: '20px' }}\r\n//         onClick={handlePayment}\r\n//       >\r\n//         Pay Now\r\n//       </Button>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default PaymentPage;\r\n// import React, { useState } from 'react';\r\n// import { TextField, Button, Typography, Container, Grid, Paper } from '@mui/material';\r\nimport GPayIcon from '../assets/images/google-pay.png';\r\nimport PhonePeIcon from '../assets/images/phonepe.png';\r\nimport CreditCardIcon from '../assets/images/payment.png';\r\n// import './Payment.css';\r\n\r\n// const Payment = () => {\r\n//   const [selectedPaymentMethod, setSelectedPaymentMethod] = useState('');\r\n\r\n//   const handlePaymentMethodChange = (method) => {\r\n//     setSelectedPaymentMethod(method);\r\n//   };\r\n\r\n//   const handlePayment = () => {\r\n//     // Add your payment processing logic here\r\n//     alert(`Processing payment with ${selectedPaymentMethod}`);\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"sm\" className=\"payment-container\">\r\n//       <Typography variant=\"h4\" gutterBottom>\r\n//         Payment Page\r\n//       </Typography>\r\n//       <Grid container spacing={3}>\r\n//         <Grid item xs={12}>\r\n//           <Paper className={`payment-method ${selectedPaymentMethod === 'gpay' && 'selected'}`} onClick={() => handlePaymentMethodChange('gpay')}>\r\n//             <img src={GPayIcon} alt=\"GPay\" className=\"payment-icon\" />\r\n//             <Typography>Google Pay</Typography>\r\n//           </Paper>\r\n//         </Grid>\r\n//         <Grid item xs={12}>\r\n//           <Paper className={`payment-method ${selectedPaymentMethod === 'phonepe' && 'selected'}`} onClick={() => handlePaymentMethodChange('phonepe')}>\r\n//             <img src={PhonePeIcon} alt=\"PhonePe\" className=\"payment-icon\" />\r\n//             <Typography>PhonePe</Typography>\r\n//           </Paper>\r\n//         </Grid>\r\n//         <Grid item xs={12}>\r\n//           <Paper className={`payment-method ${selectedPaymentMethod === 'creditcard' && 'selected'}`} onClick={() => handlePaymentMethodChange('creditcard')}>\r\n//             <img src={CreditCardIcon} alt=\"Credit Card\" className=\"payment-icon\" />\r\n//             <Typography>Credit Card</Typography>\r\n//           </Paper>\r\n//         </Grid>\r\n//       </Grid>\r\n//       {selectedPaymentMethod === 'creditcard' && (\r\n//         <div className=\"credit-card-form\">\r\n//           <TextField label=\"Card Number\" variant=\"outlined\" fullWidth margin=\"normal\" />\r\n//           <TextField label=\"Expiry Date\" variant=\"outlined\" fullWidth margin=\"normal\" />\r\n//           <TextField label=\"CVV\" variant=\"outlined\" fullWidth margin=\"normal\" />\r\n//         </div>\r\n//       )}\r\n//       <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handlePayment} disabled={!selectedPaymentMethod}>\r\n//         Pay with {selectedPaymentMethod ? selectedPaymentMethod.toUpperCase() : '...'}\r\n//       </Button>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Payment;\r\n// import React, { useState } from 'react';\r\n// import { TextField, Button, Typography, Container, Grid, Paper, Box } from '@mui/material';\r\n\r\n\r\n// const Payment = () => {\r\n//   const [selectedPaymentMethod, setSelectedPaymentMethod] = useState('');\r\n\r\n//   const handlePaymentMethodChange = (method) => {\r\n//     setSelectedPaymentMethod(method);\r\n//   };\r\n\r\n//   const handlePayment = () => {\r\n//     // Add your payment processing logic here\r\n//     alert(`Processing payment with ${selectedPaymentMethod}`);\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"md\" className=\"payment-container\">\r\n//       <Typography variant=\"h4\" gutterBottom>\r\n//         Payment Page\r\n//       </Typography>\r\n//       <Grid container spacing={3}>\r\n//         <Grid item xs={12} sm={4}>\r\n//           <Paper\r\n//             className={`payment-method ${selectedPaymentMethod === 'gpay' && 'selected'}`}\r\n//             onClick={() => handlePaymentMethodChange('gpay')}\r\n//           >\r\n//             <img src={GPayIcon} alt=\"GPay\" className=\"payment-icon\" />\r\n//             <Typography>Google Pay</Typography>\r\n//           </Paper>\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={4}>\r\n//           <Paper\r\n//             className={`payment-method ${selectedPaymentMethod === 'phonepe' && 'selected'}`}\r\n//             onClick={() => handlePaymentMethodChange('phonepe')}\r\n//           >\r\n//             <img src={PhonePeIcon} alt=\"PhonePe\" className=\"payment-icon\" />\r\n//             <Typography>PhonePe</Typography>\r\n//           </Paper>\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={4}>\r\n//           <Paper\r\n//             className={`payment-method ${selectedPaymentMethod === 'creditcard' && 'selected'}`}\r\n//             onClick={() => handlePaymentMethodChange('creditcard')}\r\n//           >\r\n//             <img src={CreditCardIcon} alt=\"Credit Card\" className=\"payment-icon\" />\r\n//             <Typography>Credit Card</Typography>\r\n//           </Paper>\r\n//         </Grid>\r\n//       </Grid>\r\n//       {selectedPaymentMethod === 'creditcard' && (\r\n//         <Box className=\"credit-card-form\">\r\n//           <TextField label=\"Card Number\" variant=\"outlined\" fullWidth margin=\"normal\" />\r\n//           <TextField label=\"Expiry Date\" variant=\"outlined\" fullWidth margin=\"normal\" />\r\n//           <TextField label=\"CVV\" variant=\"outlined\" fullWidth margin=\"normal\" />\r\n//         </Box>\r\n//       )}\r\n//       <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         fullWidth\r\n//         onClick={handlePayment}\r\n//         disabled={!selectedPaymentMethod}\r\n//         className=\"pay-button\"\r\n//       >\r\n//         Pay with {selectedPaymentMethod ? selectedPaymentMethod.toUpperCase() : '...'}\r\n//       </Button>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Payment;\r\n// import React, { useState } from 'react';\r\n// import { TextField, Button, Typography, Container, Tabs, Tab, Box } from '@mui/material';\r\n\r\n\r\n// const Payment = () => {\r\n//   const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n//   const handleTabChange = (event, newValue) => {\r\n//     setSelectedTab(newValue);\r\n//   };\r\n\r\n//   const handlePayment = () => {\r\n//     const paymentMethods = ['GPay', 'PhonePe', 'Credit Card'];\r\n//     alert(`Processing payment with ${paymentMethods[selectedTab]}`);\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"md\" className=\"payment-container\">\r\n//       <Typography variant=\"h4\" gutterBottom>\r\n//         Payment Page\r\n//       </Typography>\r\n//       <Tabs value={selectedTab} onChange={handleTabChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\r\n//         <Tab label=\"Google Pay\" icon={<img src={GPayIcon} alt=\"GPay\" className=\"tab-icon\" />} />\r\n//         <Tab label=\"PhonePe\" icon={<img src={PhonePeIcon} alt=\"PhonePe\" className=\"tab-icon\" />} />\r\n//         <Tab label=\"Credit Card\" icon={<img src={CreditCardIcon} alt=\"Credit Card\" className=\"tab-icon\" />} />\r\n//       </Tabs>\r\n//       <Box className=\"payment-content\">\r\n//         {selectedTab === 0 && (\r\n//           <Typography variant=\"h6\">\r\n//             Pay with Google Pay\r\n//           </Typography>\r\n//         )}\r\n//         {selectedTab === 1 && (\r\n//           <Typography variant=\"h6\">\r\n//             Pay with PhonePe\r\n//           </Typography>\r\n//         )}\r\n//         {selectedTab === 2 && (\r\n//           <Box className=\"credit-card-form\">\r\n//             <TextField label=\"Card Number\" variant=\"outlined\" fullWidth margin=\"normal\" />\r\n//             <TextField label=\"Expiry Date\" variant=\"outlined\" fullWidth margin=\"normal\" />\r\n//             <TextField label=\"CVV\" variant=\"outlined\" fullWidth margin=\"normal\" />\r\n//           </Box>\r\n//         )}\r\n//       </Box>\r\n//       <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         fullWidth\r\n//         onClick={handlePayment}\r\n//         className=\"pay-button\"\r\n//       >\r\n//         Pay with {selectedTab === 0 ? 'Google Pay' : selectedTab === 1 ? 'PhonePe' : 'Credit Card'}\r\n//       </Button>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Payment;\r\n\r\n// import React from 'react';\r\n// import { Box, Button, Radio, FormControlLabel, RadioGroup, TextField, MenuItem, Typography } from '@mui/material';\r\n\r\n// const Payment = () => {\r\n//   return (\r\n//     <Box className=\"checkout-container\">\r\n//       <Box className=\"address-section\">\r\n//         <Typography variant=\"h6\">Delivery address</Typography>\r\n//         <Typography>Lalitha</Typography>\r\n//         <Typography>Room No: 217, Vlb Trust Office, Girls Hostel, Kovaipudur</Typography>\r\n//         <Typography>COIMBATORE, TAMIL NADU 641042</Typography>\r\n//         <Button variant=\"text\">Change</Button>\r\n//       </Box>\r\n\r\n//       <Box className=\"payment-section\">\r\n//         <Typography variant=\"h6\">Select a payment method</Typography>\r\n        \r\n//         <Box className=\"balance-section\">\r\n//           <TextField label=\"Enter Code\" variant=\"outlined\" size=\"small\" />\r\n//           <Button variant=\"contained\">Apply</Button>\r\n//         </Box>\r\n\r\n//         <Box className=\"other-methods-section\">\r\n//           <Typography>Another payment method</Typography>\r\n//           <RadioGroup name=\"payment-method\" defaultValue=\"cod\">\r\n//             <FormControlLabel value=\"card\" control={<Radio />} label=\"Credit or debit card\" />\r\n//             <Box className=\"cards\">\r\n//               <img src=\"visa.png\" alt=\"Visa\" />\r\n//               <img src=\"mastercard.png\" alt=\"MasterCard\" />\r\n//               <img src=\"amex.png\" alt=\"American Express\" />\r\n//               <img src=\"rupay.png\" alt=\"RuPay\" />\r\n//             </Box>\r\n//             <FormControlLabel value=\"netbanking\" control={<Radio />} label=\"Net Banking\" />\r\n//             <TextField select label=\"Choose an Option\" variant=\"outlined\" size=\"small\">\r\n//               <MenuItem value=\"bank1\">Bank 1</MenuItem>\r\n//               <MenuItem value=\"bank2\">Bank 2</MenuItem>\r\n//             </TextField>\r\n//             <FormControlLabel value=\"upi\" control={<Radio />} label=\"Other UPI Apps\" />\r\n//             <FormControlLabel value=\"cod\" control={<Radio />} label=\"Cash on Delivery/Pay on Delivery\" />\r\n//           </RadioGroup>\r\n//         </Box>\r\n\r\n//         <Button variant=\"contained\" className=\"payment-button\">Use this payment method</Button>\r\n//       </Box>\r\n\r\n//       <Box className=\"summary-section\">\r\n//         <Typography variant=\"h6\">Order Summary</Typography>\r\n//         <Typography>Items: ₹299.00</Typography>\r\n//         <Typography>Delivery: ₹40.00</Typography>\r\n//         <Typography>Total: ₹339.00</Typography>\r\n//         <Typography>Promotion Applied: -₹40.00</Typography>\r\n//         <Typography variant=\"h5\">Order Total: ₹299.00</Typography>\r\n//         <Button variant=\"text\">How are delivery costs calculated?</Button>\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Payment;\r\n\r\nimport React, { useContext,useState } from 'react';\r\nimport { Container, Typography, Button, Box, Grid, FormControl, InputLabel, Select, MenuItem, TextField,Paper } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useCart } from './CartContext';\r\nimport Layout from './Layout';\r\nimport './Payment.css'; // Add necessary CSS styles\r\n// import { makeStyles } from '@mui/styles';\r\nimport PayPalPayment from './PayPalPayment';\r\n\r\n\r\nconst Payment = () => {\r\n  const { cart, totalPrice } = useCart();\r\n  // const classes = useStyles();\r\n  const [paymentMethod, setPaymentMethod] = React.useState('creditCard');\r\n  const [discountCode, setDiscountCode] = useState('');\r\n  const [discountedPrice, setDiscountedPrice] = useState(totalPrice);\r\n\r\n  // Example discount logic (you can replace this with your own)\r\n  const applyDiscount = () => {\r\n    const discount = discountCode === 'SAVE10' ? 0.1 : 0; // 10% discount\r\n    const newPrice = totalPrice * (1 - discount);\r\n    setDiscountedPrice(newPrice);\r\n  };\r\n  const [cardDetails, setCardDetails] = React.useState({\r\n    cardNumber: '',\r\n    expiryDate: '',\r\n    cvv: ''\r\n  });\r\n\r\n  const handlePaymentMethodChange = (event) => {\r\n    setPaymentMethod(event.target.value);\r\n  };\r\n  \r\n  const handleError=(error)=>{\r\n    console.error('PayPal Payment Error: ',error);\r\n  };\r\n\r\n  const handleCancel=()=>{\r\n    console.log('Transaction cancelled');\r\n  };\r\n\r\n  const handleCardDetailsChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCardDetails({\r\n      ...cardDetails,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handlePlaceOrder = () => {\r\n    // Implement order placing logic\r\n    console.log('Order placed with details:', { paymentMethod, cardDetails, cart });\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Container style={{ marginTop: '4rem' }} className='payment-page'>\r\n        <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }} className='payment-header'>Payment Page</Typography>\r\n        <Grid>\r\n              <Typography variant=\"h4\" gutterBottom>Order Summary</Typography>\r\n            <Paper elevation={1} >\r\n                  <Typography variant=\"h6\">Cart Items:</Typography>\r\n              {cart.map(item => (\r\n                <Box key={item.id} style={{ marginBottom: '0.5rem' }}>\r\n                  <Typography variant=\"body1\">{item.name} - ₹{item.price} x {item.count}</Typography>\r\n                </Box>\r\n              ))}\r\n              <Typography variant=\"h6\">Total Price: ₹{totalPrice.toFixed(2)}</Typography>\r\n              <Typography variant=\"h6\">Discounted Price: ₹{discountedPrice.toFixed(2)}</Typography>\r\n            </Paper>\r\n            <Typography variant=\"h6\" gutterBottom>Apply Discount</Typography>\r\n            <TextField\r\n              label=\"Discount Code\"\r\n              variant=\"outlined\"\r\n              value={discountCode}\r\n              onChange={(e) => setDiscountCode(e.target.value)}\r\n              // className={classes.discountInput}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={applyDiscount}\r\n              // className={classes.applyButton}\r\n            >\r\n              Apply\r\n            </Button>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" className='payment-header'>Payment Method</Typography>\r\n            <FormControl fullWidth style={{ marginTop: '20px', marginBottom: '20px' }}>\r\n              <InputLabel id=\"payment-method-label\">Select Payment Method</InputLabel>\r\n              <Select\r\n                labelId=\"payment-method-label\"\r\n                id=\"payment-method\"\r\n                value={paymentMethod}\r\n                label=\"Select Payment Method\"\r\n                onChange={handlePaymentMethodChange}\r\n              >\r\n                <MenuItem value=\"creditCard\">Credit Card</MenuItem>\r\n                <MenuItem value=\"debitCard\">Debit Card</MenuItem>\r\n                <MenuItem value=\"paypal\">PayPal</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            {paymentMethod === 'creditCard' && (\r\n              <Box>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Card Number\"\r\n                  name=\"cardNumber\"\r\n                  value={cardDetails.cardNumber}\r\n                  onChange={handleCardDetailsChange}\r\n                  style={{ marginBottom: '20px' }}\r\n                />\r\n                <Box display=\"flex\" justifyContent=\"space-between\" marginBottom={2}>\r\n                  <TextField\r\n                    label=\"Expiry Date\"\r\n                    name=\"expiryDate\"\r\n                    value={cardDetails.expiryDate}\r\n                    onChange={handleCardDetailsChange}\r\n                    style={{ marginRight: '10px' }}\r\n                  />\r\n                  <TextField\r\n                    label=\"CVV\"\r\n                    name=\"cvv\"\r\n                    value={cardDetails.cvv}\r\n                    onChange={handleCardDetailsChange}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            )}\r\n            {paymentMethod === 'paypal' && (\r\n              <Grid item xs={12} md={6}>\r\n              <PayPalPayment totalPrice={totalPrice} onError={handleError} onCancel={handleCancel} />\r\n            </Grid>\r\n            // <p>Paypal</p>\r\n            )}\r\n            <Button variant=\"contained\" onClick={handlePlaceOrder} style={{ marginTop: '20px', backgroundColor: 'purple', width: '100%' }}>\r\n              Place Order\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,cAAc,MAAM,8BAA8B;AACzD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOC,KAAK,IAAIC,UAAU,EAACC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAACC,KAAK,QAAQ,eAAe;AACpI,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,eAAe,CAAC,CAAC;AACxB;AACA,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC,IAAI;IAAEC;EAAW,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}